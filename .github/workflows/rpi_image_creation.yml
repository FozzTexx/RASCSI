# This is a basic workflow to help you get started with Actions 

name: Pi Image Creation

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the rpi_image_creation branch
  push:
    branches: [ rpi_image_creation ]
  pull_request:
    branches: [ rpi_image_creation ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout RaSCSI
        uses: actions/checkout@v2
        with:
          path: RASCSI
      
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout RaSCSI
        uses: actions/checkout@v2
        with:
#          repository: akuker/pi-gen
          repository: RPi-Distro/pi-gen
          path: pi-gen
      
      - name: Install Raspberry Pi build toolchain
        run: sudo apt-get install coreutils quilt parted qemu-user-static debootstrap zerofree zip dosfstools libarchive-tools libcap2-bin grep rsync xz-utils file git curl bc qemu-utils kpartx

      - name: Configure the build....
        run: |
          echo -----------------------------------------------------
          echo "IMG_NAME='Raspbian'" > config
          touch ./stage2/SKIP ./stage3/SKIP ./stage4/SKIP ./stage5/SKIP
          touch ./stage3/SKIP_IMAGES ./stage4/SKIP_IMAGES ./stage5/SKIP_IMAGES
          touch ./stage2/EXPORT_IMAGE ./stage2/EXPORT_NOOBS
#          sudo ./build.sh
        working-directory: pi-gen

      # Configure the build
#      - name: Configure the image name
#        run: echo "IMG_NAME='rascsi_build'" > ./pi-gen/config
#      - name: Configure the TARGET_HOSTNAME name
#        run: echo "TARGET_HOSTNAME=rascsi" >> ./pi-gen/config
#      - name: Configure ENABLE_SSH 
#        run: echo "ENABLE_SSH=1" >> ./pi-gen/config
#      - name: Configure the locale
#        run: echo "LOCALE_DEFAULT=en_US.UTF-8" >> ./pi-gen/config
#      - name: Configure KEYBOARD_KEYMAP 
#        run: echo "KEYBOARD_KEYMAP=us" >> ./pi-gen/config
#      - name: Configure KEYBOARD_LAYOUT 
#        run: echo "KEYBOARD_LAYOUT='English (US)'" >> ./pi-gen/config

#      - name: Configure the build
#        run: ./rascsi_configure.sh
#        working-directory: pi-gen

      # Runs a single command using the runners shell
      - name: List files
        run: ls -alh

      - name: Make a build
        run: sudo ./build.sh
        working-directory: pi-gen

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo -----------------------------------------------------
          ls -alh pi-gen/deploy/
          echo -----------------------------------------------------
          ls -alh pi-gen/
          echo -----------------------------------------------------
          
      - name: Archive the build artifacts
        uses: actions/upload-artifact@v2.2.4
        with:
          # Artifact name
          name: raspberry-pi-image
          # A file, directory or wildcard pattern that describes what to upload
          path: pi-gen/deploy/*
