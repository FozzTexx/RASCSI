name: Debug Playground

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the rpi_image_creation branch
  push:
    branches: [ rpi_image_creation ]
  pull_request:
    branches: [ rpi_image_creation ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    # TODO: I don't think this step is needed....
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#      - name: Checkout RaSCSI
#        uses: actions/checkout@v2
#        with:
#          path: RASCSI
      
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout RaSCSI
        uses: actions/checkout@v2
        with:
          repository: akuker/pi-gen
          path: pi-gen
      
      - name: Get branch names.
        id: branch-names
        uses: tj-actions/branch-names@v5
#      - uses: actions/checkout@v2
#        with:
#          ref: ${{ steps.branch-names.outputs.head_ref_branch }}
      
#      - name: Install Raspberry Pi build toolchain
#        run: sudo apt-get install coreutils quilt parted qemu-user-static debootstrap zerofree zip dosfstools libarchive-tools libcap2-bin grep rsync xz-utils file git curl bc qemu-utils kpartx

      - name: Get branch names
        id: branch-name
        uses: tj-actions/branch-names@v5
        
      - name: Current branch name
        run: |
          echo "${{ steps.branch-name.outputs.current_branch }}"
        # Outputs: "feature/test" current PR branch.

      - name: Running on a non tag based branch and a PR branch.
        if: steps.branch-name.outputs.is_default == 'false'
        run: |
          echo "Running on branch: ${{ steps.branch-name.outputs.current_branch }}"
        # Outputs: "Running on branch: feature/test".
      
      - name: Running on a pull request (i.e non tag based branch).
        if: steps.branch-name.outputs.is_tag == 'false' && steps.branch-name.outputs.is_default == 'false'
        run: |
          echo "Running on branch: ${{ steps.branch-name.outputs.current_branch }}"
        # Outputs: "Running on branch: feature/test".
      
      - name: Get Ref brach name
        run: |
          echo "${{ steps.branch-name.outputs.ref_branch }}"
        #  Outputs: "1/merge"

      - name: Get Head Ref branch name (i.e The current pull request branch)
        run: |
          echo "${{ steps.branch-name.outputs.head_ref_branch }}"
        # Outputs: "feature/test" current PR branch.

      - name: Get Base Ref branch name (i.e The target of a pull request.)
        run: |
          echo "${{ steps.branch-name.outputs.base_ref_branch }}"
        # Outputs: "main".

      - name: Configure the build
        run: |
          echo -----------------------------------------------------
          echo "IMG_NAME=RaSCSI-$GITHUB_RUN_ID" > config
          echo "TARGET_HOSTNAME=rascsi" >> config
          echo "ENABLE_SSH=1" >> config
          echo "LOCALE_DEFAULT=en_US.UTF-8" >> config
          echo "KEYBOARD_KEYMAP=us" >> config
          echo "KEYBOARD_LAYOUT=\"English (US)\"" >> config
          echo -----------------------------------------------------
          cat config
          echo Github Run ID: $GITHUB_RUN_ID
          echo Github Run Number: $GITHUB_RUN_NUMBER
          echo Github Event Path: $GITHUB_EVENT_PATH
          echo Github Repository: $GITHUB_REPOSITORY
          echo Github Event Path: $GITHUB_EVENT_PATH
          echo Github Base Ref: $GITHUB_BASE_REF
          echo Github Head Ref: $GITHUB_HEAD_REF
          echo Github Ref: $GITHUB_REF
          echo Github Ref: $GITHUB_REF
          echo Github Ref: $GITHUB_REF
          echo Github CI: $CI
          echo branch-names head_ref_branch: ${{ steps.branch-names.outputs.head_ref_branch }}
          if [ "$CI" = "true" ]; then
            echo "Running continuous integration build"
          else
            echo "Not running continuous integration build"
          fi
          echo Full URL: $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID
        working-directory: pi-gen
